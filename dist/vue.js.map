{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重写数组的部分方法\r\n\r\n// 获取数组原型\r\nlet oldArrayProto = Array.prototype\r\n\r\n// Object.create()方法用来创建一个新对象，使用现有对象作为新对象的_proto_\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\n// 找到所有的变异方法\r\nlet methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice']\r\n// concat、slice都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n  // 这里的this指的是调用方法的数组（data）\r\n  newArrayProto[method] = function (...args) {\r\n    // todo\r\n    const result = oldArrayProto[method].call(this, ...args)\r\n    console.log('method:', method)\r\n\r\n    // 如果新增了数据那么需要再次进行劫持\r\n    let inserted\r\n    let ob = this.__ob__\r\n    switch (method) {\r\n      case 'unshift':\r\n      case 'push':\r\n      case 'splice':\r\n        inserted = args\r\n        break\r\n      case 'splice':\r\n        inserted = arsg.slice(2)\r\n      default:\r\n        break\r\n    }\r\n    console.log('新增的内容为：', inserted)\r\n    if (inserted) {\r\n      // 如果有新增的内容需要对新增的内容再次进行观测\r\n      ob.observeArray(inserted)\r\n    }\r\n    return result\r\n  }\r\n})\r\n","import { newArrayProto } from './array'\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    // 将__proto__变为不可枚举属性\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false //将__ob__变为不可枚举属性，循环的时候无法获取\r\n    })\r\n    // 把Observer实例挂载到data对象的自定义属性上\r\n    // 给所有观测过的数据增添了一个标识，如果数据有这个属性说明被观测过\r\n    // data.__ob__ = this\r\n    if (Array.isArray(data)) {\r\n      // 重写数组的7个变异方法，这里是可以修改数组本身的\r\n      // 数组中引用对象也需要被劫持\r\n      // 需要保留数组原有的特性并重写部分方法\r\n      data.__proto__ = newArrayProto\r\n      this.observeArray(data)\r\n    } else {\r\n      // Object.defineProperty只能劫持已经存在的属性，后续增加的或者删除的它无法检测到（vue2中会为此单独写一些API）\r\n      // 遍历当前属性\r\n      this.walk(data)\r\n    }\r\n  }\r\n  walk(data) {\r\n    // 循环对象，对属性依次劫持\r\n    // 重新定义属性，所以这也是vue2的一个性能问题\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n  observeArray(data) {\r\n    // 观测数组\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\n// 形成了个闭包\r\nexport function defineReactive(target, key, value) {\r\n  // 如果value是对象，只能劫持第一层，因此还需要再深度劫持\r\n  observe(value)\r\n  // defineProperty方法：第一个参数为需要定义属性的对象\r\n  // 第二个参数为需要定义的属性名\r\n  // 第三个参数为属性描述符\r\n\r\n  // 变量不被销毁是因为：get set监听事件是全局事件，不被销毁，内部函数保存着外部函数的作用域，所以外部函数有引用，也不会被销毁\r\n  Object.defineProperty(target, key, {\r\n    // set、get是defineProperty的内置方法\r\n    get() {\r\n      // 取值的时候，会执行get\r\n      //   console.log('用户取值了')\r\n      return value\r\n    },\r\n    set(newVal) {\r\n      // 修改的时候，会执行set\r\n      //   console.log('用户设置值')\r\n      if (newVal === value) return\r\n      value = newVal\r\n    }\r\n  })\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  // 只对对象进行劫持\r\n  if (typeof data !== 'object' || data == null) {\r\n    return\r\n  }\r\n\r\n  if (data.__ob__ instanceof Observer) {\r\n    // 说明这个对象已经被代理过了\r\n    return data.__ob__\r\n  }\r\n\r\n  // 如果一个对象已经被劫持过了，那么就不需要再被劫持\r\n  // 要判断一个对象是否被劫持过，可以添加一个实例，用实例来判断\r\n  return new Observer(data)\r\n}\r\n","import { observe } from './observe/index.js'\r\n\r\nexport function initState(vm) {\r\n  // 对数据进行劫持，获取所有选项\r\n  const opts = vm.$options\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  // vm.name\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key] // vm._data.name\r\n    },\r\n    set(newVal) {\r\n      vm[target][key] = newVal\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  // data可能是函数也可能是对象\r\n  let data = vm.$options.data\r\n  data = typeof data == 'function' ? data.call(vm) : data\r\n  //   console.log(data)\r\n  //   对数据进行劫持\r\n  vm._data = data\r\n  observe(data)\r\n\r\n  //  将vm._data用vm来代理\r\n  for (let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n}\r\n","import { initState } from './state'\r\n\r\n// 给Vue增加init方法\r\nexport function initMixin(Vue) {\r\n  // 用于初始化操作\r\n  Vue.prototype._init = function (options) {\r\n    // 原型中的this指的都是实例\r\n    const vm = this\r\n    // vm.$options 获取用户的配置\r\n    // 将options挂载到实例上\r\n    vm.$options = options\r\n\r\n    // 初始化状态\r\n    initState(vm)\r\n  }\r\n}\r\n","import { initMixin } from './init'\r\n// es5中Vue是通过构造函数然后扩展方法，然后将不同的方法放到不同的文件中\r\n// es6是将所有原型方法放在类中\r\nfunction Vue(options) {\r\n  // debugger\r\n  // 默认调用init\r\n  this._init(options)\r\n}\r\n\r\n// 初始化，扩展了init方法\r\ninitMixin(Vue)\r\n\r\nexport default Vue\r\n"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","console","log","inserted","ob","__ob__","arsg","slice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","set","newVal","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options"],"mappings":"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"}